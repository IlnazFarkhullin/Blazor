@page "/st"
@using WebApplication1.Data

@inject WebApplication1.DataBaseStudent.IStudentService sdt

<h3>DataStud</h3>
<div class="row">
    <div class="col">
        <input @bind="toDo.Name" name="input" class="form-control" placeholder="Введите название" />
    </div>
    <div class="col">

        <button @onclick="(() => Save())" class="btn btn-success"> Добавить</button>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>Фамилия</th>
            <th>Имя</th>
            <th>Отчество</th>
            

        </tr>
    </thead>
    <tbody>
        @if (doto.Count() > 0)
        {
            @foreach (var item in doto)
            {
                <tr>
                    <td>@item.Surname</td>
                    <td>@item.Name</td>
                    <td>@item.Lname</td>
                    <td><button ><img src="/img/Save.png"/></button></td>
                    <td><button class="btn btn-success" @onclick ="@(e => Deleted(item._id))">Удалить</button></td>

                </tr>
            }
        }
    </tbody>

</table>
@code {
   
    DataBaseStudent.DBStudents toDo = new DataBaseStudent.DBStudents();
    List<DataBaseStudent.DBStudents> doto = new List<DataBaseStudent.DBStudents>();
    protected override async Task OnInitializedAsync()
    {
        GetToDO();
    }
    private void GetToDO()
    {
        doto = sdt.GetDBStudent();
    }

    private void Save()
    {
        sdt.Save(toDo);
        Reset();
        GetToDO();
    }
    private void Reset()
    {
        toDo = new DataBaseStudent.DBStudents();

    }
    private void Deleted(string Studid)
    {
        sdt.Delete(Studid);
        GetToDO();
    }
}
